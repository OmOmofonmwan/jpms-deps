<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dev.ikm.build</groupId>
        <artifactId>java-parent</artifactId>
        <version>1.43.0</version>
        <relativePath></relativePath>
    </parent>

    <groupId>dev.ikm.jpms</groupId>
    <artifactId>chronicle-map</artifactId>
    <packaging>jar</packaging>
    <name>Chronicle map</name>
    <version>${core.artifact.version}-${core.artifact.release}</version>

    <properties>
        <core.artifact.version>1.0.15</core.artifact.version>
        <core.artifact.release>r2</core.artifact.release>

        <chronicle-map.version>3.20.84</chronicle-map.version>
        <chronicle-values.version>2.20.80</chronicle-values.version>
        <chronicle-core.version>2.20.122</chronicle-core.version>
        <chronicle-bytes.version>2.20.80</chronicle-bytes.version>
        <chronicle-threads.version>2.20.104</chronicle-threads.version>
        <chronicle-wire.version>2.20.111</chronicle-wire.version>
        <chronicle-compiler.version>2.4.0</chronicle-compiler.version>
        <chronicle-algorithms.version>2.20.80</chronicle-algorithms.version>

        <chronicle-map.release>r1</chronicle-map.release>
        <chronicle-values.release>r1</chronicle-values.release>
        <chronicle-core.release>r1</chronicle-core.release>
        <chronicle-bytes.release>r1</chronicle-bytes.release>
        <chronicle-threads.release>r1</chronicle-threads.release>
        <chronicle-wire.release>r1</chronicle-wire.release>
        <chronicle-compiler.release>r1</chronicle-compiler.release>
        <chronicle-algorithms.release>r1</chronicle-algorithms.release>

    </properties>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/</directory>
                <includes>
                    <include>LICENSE.txt</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>sources</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-map</artifactId>
                                    <version>${chronicle-map.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-values</artifactId>
                                    <version>${chronicle-values.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-core</artifactId>
                                    <version>${chronicle-core.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-bytes</artifactId>
                                    <version>${chronicle-bytes.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-threads</artifactId>
                                    <version>${chronicle-threads.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-wire</artifactId>
                                    <version>${chronicle-wire.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>compiler</artifactId>
                                    <version>${chronicle-compiler.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-algorithms</artifactId>
                                    <version>${chronicle-algorithms.version}</version>
                                    <classifier>sources</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-map</artifactId>
                                    <version>${chronicle-map.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-values</artifactId>
                                    <version>${chronicle-values.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-core</artifactId>
                                    <version>${chronicle-core.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-bytes</artifactId>
                                    <version>${chronicle-bytes.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-threads</artifactId>
                                    <version>${chronicle-threads.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-wire</artifactId>
                                    <version>${chronicle-wire.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>compiler</artifactId>
                                    <version>${chronicle-compiler.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>net.openhft</groupId>
                                    <artifactId>chronicle-algorithms</artifactId>
                                    <version>${chronicle-algorithms.version}</version>
                                    <classifier>javadoc</classifier>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>
                                        ${project.build.directory}/chronicle-map-${core.artifact.version}-${core.artifact.release}-sources.jar
                                    </file>
                                    <type>jar</type>
                                    <classifier>sources</classifier>
                                </artifact>
                                <artifact>
                                    <file>
                                        ${project.build.directory}/chronicle-map-${core.artifact.version}-${core.artifact.release}-javadoc.jar
                                    </file>
                                    <type>jar</type>
                                    <classifier>javadoc</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-module-infos</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/moditect</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>chronicle-map</artifactId>
                                        <version>${chronicle-map.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module net.openhft.chronicle {
                                            requires java.naming;
                                            requires java.management;
                                            requires jdk.unsupported;
                                            exports net.openhft.chronicle.core.values;
                                            exports net.openhft.chronicle.map;
                                            exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>chronicle-values</artifactId>
                                        <version>${chronicle-values.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module net.openhft.chronicle {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>chronicle-core</artifactId>
                                        <version>${chronicle-core.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module net.openhft.chronicle {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>chronicle-bytes</artifactId>
                                        <version>${chronicle-bytes.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>chronicle-threads</artifactId>
                                        <version>${chronicle-threads.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>chronicle-wire</artifactId>
                                        <version>${chronicle-wire.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>compiler</artifactId>
                                        <version>${chronicle-compiler.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.openhft</groupId>
                                        <artifactId>chronicle-algorithms</artifactId>
                                        <version>${chronicle-algorithms.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>


                                <module>
                                    <artifact>
                                        <groupId>net.java.dev.jna</groupId>
                                        <artifactId>jna</artifactId>
                                        <version>5.5.0</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>


                                <module>
                                    <artifact>
                                        <groupId>net.java.dev.jna</groupId>
                                        <artifactId>jna-platform</artifactId>
                                        <version>5.5.0</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>com.intellij</groupId>
                                        <artifactId>annotations</artifactId>
                                        <version>12.0</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>com.squareup</groupId>
                                        <artifactId>javapoet</artifactId>
                                        <version>1.12.1</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.slf4j</groupId>
                                        <artifactId>slf4j-api</artifactId>
                                        <version>1.7.30</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        open module org.hl7.tinkar.chroniclemap {
                                        requires java.naming;
                                        requires java.management;
                                        requires jdk.unsupported;
                                        exports net.openhft.chronicle.core.values;
                                        exports net.openhft.chronicle.map;
                                        exports net.openhft.chronicle.values;
                                        }
                                    </moduleInfoSource>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unzip-sources-javadoc</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <echo message="unzipping chronicle-map sources and javadoc files" />
                                <unzip src="${project.build.directory}/dependency/chronicle-map-${chronicle-map.version}-sources.jar"
                                       dest="${project.build.directory}/sources/chronicle-map/sources/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-map-${chronicle-map.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/chronicle-map/javadoc/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-values-${chronicle-values.version}-sources.jar"
                                       dest="${project.build.directory}/sources/chronicle-values/sources/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-values-${chronicle-values.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/chronicle-values/javadoc/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-core-${chronicle-core.version}-sources.jar"
                                       dest="${project.build.directory}/sources/chronicle-core/sources/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-core-${chronicle-core.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/chronicle-core/javadoc/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-bytes-${chronicle-bytes.version}-sources.jar"
                                       dest="${project.build.directory}/sources/chronicle-bytes/sources/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-bytes-${chronicle-bytes.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/chronicle-bytes/javadoc/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-threads-${chronicle-threads.version}-sources.jar"
                                       dest="${project.build.directory}/sources/chronicle-threads/sources/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-threads-${chronicle-threads.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/chronicle-threads/javadoc/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-wire-${chronicle-wire.version}-sources.jar"
                                       dest="${project.build.directory}/sources/chronicle-wire/sources/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-wire-${chronicle-wire.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/chronicle-wire/javadoc/" />
                                <unzip src="${project.build.directory}/dependency/compiler-${compiler.version}-sources.jar"
                                       dest="${project.build.directory}/sources/compiler/sources/" />
                                <unzip src="${project.build.directory}/dependency/compiler-${compiler.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/compiler/javadoc/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-algorithms-${chronicle-algorithms.version}-sources.jar"
                                       dest="${project.build.directory}/sources/chronicle-algorithms/sources/" />
                                <unzip src="${project.build.directory}/dependency/chronicle-algorithms-${chronicle-algorithms.version}-javadoc.jar"
                                       dest="${project.build.directory}/javadoc/chronicle-algorithms/javadoc/" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>zip-sources-javadoc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="generating sources and javadoc jars" />
                                <zip destfile="${project.build.directory}/chronicle-map-${core.artifact.version}-${core.artifact.release}-sources.jar"
                                     update="true" comment="generating sources jar">
                                    <fileset dir="${project.build.directory}/sources/" />
                                </zip>
                                <zip destfile="${project.build.directory}/chronicle-map-${core.artifact.version}-${core.artifact.release}-javadoc.jar"
                                     update="true" comment="generating javadoc jar">
                                    <fileset dir="${project.build.directory}/javadoc/" />
                                </zip>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <echo message="unzipping file" />
                                <unzip src="${project.build.directory}/moditect/chronicle-map-3.20.84.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/chronicle-values-2.20.80.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/chronicle-core-2.20.122.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/annotations-12.0.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/chronicle-bytes-2.20.80.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/chronicle-threads-2.20.104.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/javapoet-1.12.1.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/slf4j-api-1.7.30.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/chronicle-wire-2.20.111.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/compiler-2.4.0.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/chronicle-algorithms-2.20.80.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/jna-5.5.0.jar"
                                       dest="${project.build.directory}/classes/" />
                                <unzip src="${project.build.directory}/moditect/jna-platform-5.5.0.jar"
                                       dest="${project.build.directory}/classes/" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
