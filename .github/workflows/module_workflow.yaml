name: Build & Publish Module Workflow

run-name: 'Build & Publish Module -- ${{github.event.inputs.module}}'

on:
    workflow_dispatch:
        inputs:
            module:
                type: choice
                description: Module
                options:
                    - --SELECT--
                    - activej-bytebuf
                    - activej-common
                    - auto-service
                    - bugsplat
                    - chronicle-map
                    - commons-io
                    - commons-lang3
                    - commons-text
                    - directory-watcher
                    - eclipse-collections
                    - eclipse-collections-api
                    - guava
                    - hapi-fhir-base
                    - hapi-fhir-r4
                    - hapi-fhir-structures-r4
                    - hapi-fhir-utilities
                    - httpclient
                    - httpcore
                    - httpmime
                    - javax-inject
                    - jgit
                    - jheaps
                    - jsr305
                    - mutiny
                    - mvstore
                    - ontology-model
                    - protobuf-java
                    - reactive-streams
                    - record-builder-core
                    - roaringbitmap
                    - smallrye-common-annotation
                    - snorocket
                required: true

env:
    GITHUB_MODULE_DIR: /home/runner/work/${{github.event.repository.name}}/${{github.event.repository.name}}/${{github.event.inputs.module}}
    SELF_HOSTED_MODULE_DIR: /home/ec2-user/actions-runner/_work/${{github.event.repository.name}}/${{github.event.repository.name}}/${{github.event.inputs.module}}
    MAVEN_SETTING: '/home/ec2-user/maven/.m2/settings.xml'

  

jobs:
  initialize:
    name: Initialize
    if: github.event.repository.owner == 'ikmdev'
    runs-on: ubuntu-20.04
    env:
        JAVA_VERSION: '21'
    steps:
          - name: Fail if --SELECT-- chosen
            if: github.event.inputs.module == '--SELECT--'
            run: |
              echo "Please pick a valid module"
              exit 1

          - name: Checkout Code Repository
            uses: actions/checkout@v4

          - name: Change Java Version Env If Chronicle-Map
            if: github.event.inputs.module == 'chronicle-map'
            run: echo "JAVA_VERSION=8" >> $GITHUB_ENV

          - name: Setup Java
            uses: actions/setup-java@v4
            with:
              distribution: 'zulu'
              java-version: ${{env.JAVA_VERSION}}
              server-id: ossrh
              server-username: MAVEN_USERNAME
              server-password: MAVEN_CENTRAL_TOKEN
              gpg-private-key: ${{secrets.GPG_KEY}}
              gpg-passphrase: MAVEN_GPG_PASSPHRASE

          - name: Get Current Version
            id: getPOMVersion
            run: echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
            working-directory: ${{env.GITHUB_MODULE_DIR}}

          - name: Print Version
            run: echo "Current Version - ${{steps.getPOMVersion.outputs.POM_VERSION}}"

          - name: Maven Build
            run: |
              mvn clean install \
                    -Dmaven.build.cache.enabled=false \
                    --batch-mode \
                    -e \
                    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn 

          - name: Publish to OSSRH Maven Central
            if:   github.event.inputs.module != 'chronicle-map'
            run: |
                mvn deploy \
                    --batch-mode \
                    -e \
                    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                    -DskipTests \
                    -DskipITs \
                    -DrepositoryId='maven-releases' \
                    -DrepositoryIdOSSRH='true' \
                    -Dmaven.source.skip=true  \
                    -Dmaven.javadoc.skip=true \
                    -PstageOSSRH
            working-directory: ${{env.GITHUB_MODULE_DIR}}
            env:
              MAVEN_USERNAME: ${{secrets.OSSRH_TOKEN_USER}}
              MAVEN_CENTRAL_TOKEN: ${{secrets.OSSRH_TOKEN_PASS}}
              MAVEN_GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}

          - name: Publish to OSSRH Maven Central (Chronicle Map)
            if:   github.event.inputs.module == 'chronicle-map'
            run: |
                mvn deploy \
                    --batch-mode \
                    -e \
                    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                    -DskipTests \
                    -DskipITs \
                    -DrepositoryId='maven-releases' \
                    -DrepositoryIdOSSRH='true' \
                    -PstageOSSRH
            working-directory: ${{env.GITHUB_MODULE_DIR}}
            env:
              MAVEN_USERNAME: ${{secrets.OSSRH_TOKEN_USER}}
              MAVEN_CENTRAL_TOKEN: ${{secrets.OSSRH_TOKEN_PASS}}
              MAVEN_GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
        


